"""update permission parts

Revision ID: 90d301d41052
Revises: 6302e7c57c35
Create Date: 2025-03-21 11:12:17.051443

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90d301d41052'
down_revision: Union[str, None] = '6302e7c57c35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_permission',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    op.drop_table('user_permission_association')
    op.add_column('permissions', sa.Column('description', sa.String(), nullable=True))
    op.alter_column('permissions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_permissions_id', table_name='permissions')
    op.drop_column('permissions', 'created_at')
    op.drop_column('permissions', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('permissions', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('permissions', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_index('ix_permissions_id', 'permissions', ['id'], unique=True)
    op.alter_column('permissions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('permissions', 'description')
    op.create_table('user_permission_association',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='user_permission_association_permission_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_permission_association_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name='user_permission_association_pkey')
    )
    op.drop_table('user_permission')
    # ### end Alembic commands ###
